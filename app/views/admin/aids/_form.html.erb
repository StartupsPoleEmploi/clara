<%#
# Form Partial

This partial is rendered on a resource's `new` and `edit` pages,
and renders all form fields for a resource's editable attributes.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>
<%- v = view_object(:aid_form, local_assigns) %>
<%- attr_id = page.resource.attributes["id"].to_s %>
<%- mandatory_list = ["name", "contract_type", "ordre_affichage"] %>

<%= form_for([namespace, page.resource], html: { class: "form" }) do |f| %>
  <% if page.resource.errors.any? %>
    <div id="error_explanation">
      <h2  class="flash-error">
        <%= t(
          "administrate.form.errors",
          pluralized_errors: pluralize(page.resource.errors.count, t("administrate.form.error")),
          resource_name: display_resource_name(page.resource_name)
        ) %>
      </h2>
    </div>
  <% end %>

  <% page.attributes.each do |attribute| -%>
    <% unless v.hide_field?(attribute) -%>
      <div class="field-unit field-unit--<%= attribute.html_class %> field-unit--errored-<%=v.is_in_error(attribute)%>">
        <%= render_field attribute, f: f, is_mandatory: v.mandatory?(v.attr_name(attribute)) %>
        <% if v.is_in_error(attribute) -%>
          <div class="field-unit-error-msg field-unit-error-msg--<%= attribute.html_class %>">
            &nbsp;âš  <%= v.error_message(attribute) %>
          </div>
        <% end %>
      </div>
    <% end %>
  <% end -%>

  <div class="form-actions">
    <%= f.submit %>
  </div>
<% end %>

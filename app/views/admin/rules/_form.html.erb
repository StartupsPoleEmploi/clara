<%#
# Form Partial

This partial is rendered on a resource's `new` and `edit` pages,
and renders all form fields for a resource's editable attributes.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<%- kind = params[:rule_kind] || page.resource.try(:operator_type).blank? ? "composite" : "simple"  %>

<%- mandatory_simple_rules = ["name", "variable", "operator_type", "value_eligible"] %>
<%- mandatory_composite_rules = ["name", "slave_rules", "composition_type"] %>
<%- mandatory_list = kind == "composite" ? mandatory_composite_rules : mandatory_simple_rules %>


<%- exclusion_simple_rules = ["composition_type", "slave_rules", "value_ineligible", "aids"] %>
<%- exclusion_composite_rules = ["variable", "operator_type", "value_eligible", "value_ineligible", "aids"] %>
<%- exclusion_list = kind == "composite" ? exclusion_composite_rules : exclusion_simple_rules %>

<%- help_h = {"name" => "help.rule.name", "description" => "help.rule.description", "slave_rules" => "help.rule.slave_rules", "composition_type" => "help.rule.composition_type"} %>
<%- placeholder_h = {"name" => "placeholder.rule.name", "description" => "placeholder.rule.description"} %>

<%= form_for([namespace, page.resource], html: { class: "form" }) do |f| %>
  <% if page.resource.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= t(
          "administrate.form.errors",
          pluralized_errors: pluralize(page.resource.errors.count, t("administrate.form.error")),
          resource_name: display_resource_name(page.resource_name)
        ) %>
      </h2>

      <ul>
        <% page.resource.errors.full_messages.each do |message| %>
          <li class="flash-error"><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <% page.attributes.each do |attribute| -%>
    <%- attr_name = attribute.attribute.to_s%>
    <%- is_excluded = exclusion_list.include?(attr_name)%>
    <%- is_mandatory = mandatory_list.include?(attr_name)%>
    <% unless is_excluded -%>
      <div class="field-unit field-unit--<%= attribute.html_class %>">
        <%= render_field attribute, f: f, predefined_value: kind, is_mandatory: is_mandatory, placeholder: placeholder_h[attr_name] %>
      </div>
    <% end -%>
  <% end -%>

  <div class="form-actions">
    <%= f.submit %>
  </div>
<% end %>

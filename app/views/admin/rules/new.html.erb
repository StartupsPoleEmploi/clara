<%#
# New

This view is the template for the "new resource" page.
It displays a header, and then renders the `_form` partial
to do the heavy lifting.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to help display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<%- kind = page.resource.try(:kind) || params[:rule_kind] %>

<%- mandatory_simple_rules = ["name", "variable", "operator_type", "value"] %>
<%- mandatory_composite_rules = ["name", "child_rules", "composition_type"] %>
<%- mandatory_list = kind == "composite" ? mandatory_composite_rules : mandatory_simple_rules %>


<%- exclusion_simple_rules = ["composition_type", "child_rules"] %>
<%- exclusion_composite_rules = ["variable", "operator_type", "value"] %>
<%- exclusion_list = kind == "composite" ? exclusion_composite_rules : exclusion_simple_rules %>

<%- help_h = {"name" => "help.rule.name", "description" => "help.rule.description", "child_rules" => "help.rule.child_rules", "composition_type" => "help.rule.composition_type"} %>
<%- placeholder_h = {"name" => "placeholder.rule.name", "description" => "placeholder.rule.description"} %>


<% content_for(:title) do %>
  <%= t(
    "administrate.actions.new_resource",
    name: display_resource_name(page.resource_name).titleize
  ) %>
<% end %>

<header class="main-content__header" role="banner">
  <h1 class="main-content__page-title">
    <%= content_for(:title) %>
  </h1>

  <div>
    <%= link_to t("administrate.actions.back"), :back, class: "button" %>
  </div>
</header>

<section class="main-content__body">
  <%= render "form", page: page %>
</section>

version: "3"

volumes:
  vol_data:
  vol_redis:
  vol_shared:

services:

  redis:
    image: 'redis:5-alpine'
    command: redis-server
    ports:
    - '6379:6379'
    volumes:
    - 'vol_redis:/data'
    networks:
    - mynetwork
    
  clara_nginx:
    restart: always
    privileged: true
    build:
      context: .
      dockerfile: dockerfile_nginx
      args:
      - ENV_TYPE=${ENV:-production}
    hostname: clara_nginx 
    container_name: clara_nginx
    volumes:
    - "vol_shared:/var/www/ara"
    - "../private/nginx:/home/nginx"
    ports:
    - "80:80"
    - "443:443"
    depends_on:
    - clara_rails
    networks:
    - mynetwork

  clara_rails:
    restart: always
    build:
      context: .
      dockerfile: dockerfile_rails
      args:
      - ENV_TYPE=${ENV:-production}
    hostname: clara_rails
    container_name: clara_rails
    volumes:
    - "vol_shared:/var/www/ara"
    - "./rails:/home/clara"
    - "../private/env:/home/env"
    depends_on:
    - redis
    environment:
      REDIS_URL: "redis://redis:6379/1"

  clara_db:
    restart: always
    build:
      context: .
      dockerfile: dockerfile_db
      args:
      - ENV_TYPE=${ENV:-production}
    hostname: clara_db
    container_name: clara_db
    volumes:
    - "vol_data:/var/lib/postgresql/data"
    - "../private/db:/home/db"
    networks:
    - mynetwork

  clara_backups:
    restart: always
    build:
      context: .
      dockerfile: dockerfile_backups
      args:
      - ENV_TYPE=${ENV:-production}
    hostname: clara_backups
    container_name: clara_backups
    volumes:
    - "./:/home/docker"
    - "./backups/home/backups:/home/backups"
    - "/mnt/backups:/mnt/backups"
    depends_on:
    - clara_db
    networks:
    - mynetwork

networks:
  mynetwork:
    driver: bridge
